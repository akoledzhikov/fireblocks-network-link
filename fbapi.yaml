openapi: 3.0.0
info:
  description: |
    This is the [Fireblocks](https://fireblocks.com) Exchange API standard.
    Check out the [API documentation](https://docs.fireblocks.com) for more information.
  version: "1.0.0"
  title: Fireblocks Exchange API
  contact:
    email: support@fireblocks.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/fb-api/Exchanges-API/1.0.0
  - url: 'https://api.fireblocks.com/v1'
tags:
  - name: accounts
    description: Account Interaction API
  
paths:
  /accounts:
    get:
      tags:
        - accounts
      summary: Fetches the list of accounts a user has access to
      description: >-
        Fetches the list of accounts a user has access to
      operationId: getAccounts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '401':
          description: Unauthorized. Either API details are missing or invalid
        '429':
          description: Rate limit was reached!
        '500':
          description: Exchange internal error, can't process this right now.

  /accounts/balances:
    get:
      tags:
        - accounts
      summary: Fetches list of all coins and quantities of all the accounts
      description: >-
        Fetches list of all coins and quantities of all the accounts
      operationId: getBalances
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  fundableAccountType:
                    $ref: '#/components/schemas/EAccountType'
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Balance'
        '401':
          description: Unauthorized. Either API details are missing or invalid
        '429':
          description: Rate limit was reached!
        '500':
          description: Exchange internal error, can't process this right now.
  /accounts/balances/{accountId}:
    get:
      tags:
        - accounts
      summary: Fetches list of all coins and quantities of a specific account id
      description: >-
        Fetches list of all coins and quantities of a specific account id
      operationId: getBalanceByAccountId
      parameters:
        - in: path
          name: accountId
          required: true
          description: The ID of the account to use
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountBalance'
        '401':
          description: Unauthorized. Either API details are missing or invalid
        '404':
          description: Account ID not found or missing.
        '429':
          description: Rate limit was reached!
        '500':
          description: Exchange internal error, can't process this right now.

  /internalTransfer:
    post:
      summary: Initiate a transfer from one internal account to another, eg. trading to margin
      operationId: internalTransfer
      parameters:
        - name: fromAccount
          in: header
          description: foobar
          required: true
          schema:
            type: string
        - name: toAccount
          in: header
          description: foobar
          required: true
          schema:
            type: string
        - name: coinSymbol
          in: header
          description: foobar
          required: true
          schema:
            type: string
        - name: amount
          in: header
          description: foobar
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid Operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        description: order placed for purchasing the pet
        required: true
        
  /subaccountTransfer:
    post:
      summary: Initiate a transfer from one internal sub-account to another sub-account
      operationId: subaccountTransfer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid Order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        description: order placed for purchasing the pet
        required: true

  /withdraw:
    post:
      summary: Initiate a withdrawal from Exchange wallet to external wallet address
      operationId: withdraw
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid Order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        description: order placed for purchasing the pet
        required: true

  /withdrawalFee:
    get:
      summary: Fetch the estimated transaction fee required for an external withdrawal
      operationId: withdrawalFee
      parameters:
        - name: tags
          in: query
          description: Tags to filter by
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid tag value
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'

  /depositAddress:
    get:
      summary: Fetch the estimated transaction fee required for an external withdrawal
      operationId: depositAddress
      parameters:
        - name: tags
          in: query
          description: Tags to filter by
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid tag value
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'

  /transactionStatus:
    get:
      summary: Fetch the status of a given transaction ID
      operationId: transactionStatus
      parameters:
        - name: tags
          in: query
          description: Tags to filter by
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid tag value
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'

  /transactionHistory:
    get:
      summary: Fetch the history of all transactions
      operationId: transactionHistory
      parameters:
        - name: tags
          in: query
          description: Tags to filter by
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid tag value
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'

  /supportedAssets:
    get:
      summary: Fetch the assets supported by the exchanges
      operationId: supportedAssets
      parameters:
        - name: tags
          in: query
          description: Tags to filter by
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid tag value
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'

definitions:


components:
  schemas:
    EAccountType:
      type: string
      description: "Enumeration on types of possible accounts"
      enum:
        - SPOT
        - FUNDING
        - FUTURES
        - MARGIN
      example:
        MARGIN

    Account:
      type: object
      properties:
        id:
          type: string
          example: "23e4567-e89b-12d3-a456-426614174000"
          description: "UUID representation of an account identifier"
        type:
          $ref : '#/components/schemas/EAccountType'
      xml:
        name: Account
  
    AccountBalance:
      type: object
      properties:
        currency:
          type: string
          example: USDT
          description: "The symbol of the cryptocurrency"
        pendingAmount:
          type: number
          example: 188.2315812
          description: "The pending amount in usage, on mempool but not passed confirmations"
        availableAmount:
          type: number
          example: 10.333
          description: "The available amount for usage, the amount the account has with guarantee"
        borrowedAmount:
          type: number
          example: 3.1
          description: "The borrowed amount for usage, the amount the exchange borrowed to the user"
      xml:
        name: AccountBalance

    Balance:
      type: object
      properties:
        type:
          $ref : '#/components/schemas/EAccountType'
        balances:
          type: array
          items:
            $ref: '#/components/schemas/AccountBalance'

      xml:
        name: Balance  
  
    Transaction:
      type: object
      required:
        - name
        - photoUrls
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: doggie
        photoUrls:
          type: array
          xml:
            name: photoUrl
            wrapped: true
          items:
            type: string
        tags:
          type: array
          xml:
            name: tag
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
      xml:
        name: Transaction  
  
    Asset:
      type: object
      required:
        - name
        - photoUrls
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: doggie
        photoUrls:
          type: array
          xml:
            name: photoUrl
            wrapped: true
          items:
            type: string
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
      xml:
        name: Asset

          
  requestBodies:
    Pet:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
        application/xml:
          schema:
            $ref: '#/components/schemas/Pet'
      description: Pet object that needs to be added to the store
      required: true
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
      description: List of user object
      required: true
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
          scopes:
            'write:pets': modify pets in your account
            'read:pets': read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
