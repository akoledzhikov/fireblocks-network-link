openapi: 3.0.0
info:
  description: |
    This is the [Fireblocks](https://fireblocks.com) Exchange API standard.
    Check out the [API documentation](https://docs.fireblocks.com) for more information.
  title: Fireblocks Exchange API
  version: "0.2.0"
  contact:
    email: support@fireblocks.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/fb-api/Exchanges-API/1.0.0
  - url: 'https://api.fireblocks.com/v1'
  
paths:  
  /accounts/balances:
    get:
      summary: Fetches list of all coins and quantities of all the accounts
      description: >-
        Fetches list of all coins and quantities of all the accounts
      operationId: getBalances
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                  $ref: '#/components/schemas/Balance'
        '401':
          description: Unauthorized. Either API details are missing or invalid
        '500':
          description: Exchange internal error, can't process this right now.

  /internalTransfer:
    post:
      summary: Initiate a transfer from one internal account to another, eg. TRADING to MARGIN
      operationId: internalTransfer
      parameters:
        - name: fromAccountType
          in: header
          description: "The sub-account type being transferred from."
          required: true
          example: "MARGIN"
          schema:
            $ref : '#/components/schemas/EAccountType'
        - name: toAccountType
          in: header
          description: "The sub-account type being transferred to."
          required: true
          example: "SPOT"
          schema:
            $ref : '#/components/schemas/EAccountType'
        - name: coinSymbol
          in: header
          example: "USDT"
          required: true
          schema:
            type: string
        - name: amount
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  completed:
                    type: boolean
                    example: true
                  transactionID:
                    type: string
                    description: "optional"
                    example: "3e8374383acce78d38be7fe9"
        '400':
          description: Invalid Operation
        '429':
          description: Rate limit reached
        
  /subaccountTransfer:
    post:
      summary: Initiate a transfer from one internal sub-account to another sub-account
      operationId: subaccountTransfer
      parameters:
        - name: subAccountID
          in: header
          required: true
          schema:
            type: string
        - name: direction
          in: header
          required: true
          description: "in: from another sub/main account, out: to another sub/main account"
          schema:
            type: string
            enum: [IN, OUT]
        - name: coinSymbol
          in: header
          required: true
          example: "USDT"
          schema:
            type: string
        - name: amount
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  completed:
                    type: boolean
                    example: true
                  transactionID:
                    type: string
                    example: "3e8374383acce78d38be7fe9"
        '400':
          description: Invalid operation
        '429':
          description: Rate limit reached

  /withdraw:
    post:
      summary: Initiate a withdrawal from Exchange wallet to external wallet address
      operationId: withdraw
      parameters:
        - name: accountType
          in: header
          required: true
          schema:
            $ref : '#/components/schemas/EAccountType'
        - name: toAddress
          in: header
          required: true
          schema:
            type: string
        - name: tag
          in: header
          description: "(optional) A 'tag' or 'memo', if required by the network"
          schema:
            type: string
        - name: coinSymbol
          in: header
          required: true
          schema:
            type: string
        - name: network
          in: header
          required: true
          schema:
            type: string
        - name: amount
          in: header
          required: true
          schema:
            type: string
        - name: isGross
          in: header
          required: true
          schema:
            type: boolean
        - name: maxFee
          in: header
          description: (optional) The service fee charged for withdrawal 
          schema:
            type: number
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactionID:
                    type: string
                    example: "3e8374383acce78d38be7fe9"
        '400':
          description: Invalid operation

  /withdrawalFee:
    get:
      summary: Fetch the estimated transaction fee required for an external withdrawal
      operationId: fetchWithdrawalFee
      parameters:
        - name: transferAmount
          in: header
          required: true
          schema:
            type: string
        - name: coinSymbol
          in: header
          required: true
          schema:
            type: string
        - name: network
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  feeAmount:
                    type: string
                    example: 0.23823
        '400':
          description: Invalid operation

  /depositAddress:
    get:
      summary: Fetch the estimated transaction fee required for an external withdrawal
      operationId: fetchDepositAddress
      parameters:
        - name: accountType
          in: header
          required: true
          schema:
            type: string
        - name: coinSymbol
          in: header
          required: true
          schema:
            type: string
        - name: network
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  depositAddress:
                    type: string
                    example: "0xb794f5ea0ba39494ce839613fffba74279579268"
                  depositAddressTag:
                    type: string
                    example: "(optional - only include with supported coins)"
        '400':
          description: Invalid operation

  /transactionStatus:
    get:
      summary: Fetch the status of a given transaction ID
      operationId: transactionStatus
      parameters:
        - name: transactionID
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "complete"
                  message:
                    type: string
                    example: "message (from Exchange) to explain the status in more detail"
                  txHash:
                    type: string
                    example: "(optional)"
        '400':
          description: Invalid operation

  /transactionHistory:
    get:
      summary: Fetch the history of all transactions
      operationId: transactionHistory
      parameters:
        - name: fromDate
          in: header
          required: true
          schema:
            type: string
            format: UNIX-timestamp-epoch
            example: "1649738389"
        - name: toDate
          in: header
          required: true
          schema:
            type: string
            format: date
        - name: pageSize
          in: header
          description: "Number of entries per page size in response"
          required: true
          schema:
            type: number
        - name: pageCursor
          in: header
          description: "(optional) If not specified, return the first page. Otherwise, return the page the cursor points to."
          schema:
            type: string
        - name: isSubTransfer
          in: header
          required: true
          example: false
          description: "If this is a sub-account tranfer"
          schema:
            type: boolean
        - name: coinSymbol
          in: header
          required: true
          example: "USDT"
          schema:
            type: string
        - name: network
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    nextPageCursor:
                        type: string
                        example: "(optional)"
                    transactionID:
                      type: object
                      properties:
                        status:
                          type: string
                        txHash:
                          type: string
                        amount:
                          type: string
                        serviceFee:
                          type: string
                        coinSymbol:
                          type: string
                        network:
                          type: string
                        direction:
                          type: string
                          example: "DEPOSIT"
                          description: "one of 'DEPOSIT' or 'WITHDRAWAL'"
                        timestamp:
                          type: string
                          format: UNIX-timestamp-epoch
                          example: "1649738389"
        '400':
          description: Invalid operation

  /supportedAssets:
    get:
      summary: Fetch the assets supported by the exchanges
      operationId: supportedAssets
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - type: object
                      properties:
                        coinSymbol:
                          type: string
                          example: "USDT"
                        network:
                          type: string
                        type:
                          type: string
                        contractAddress:
                          type: string
                          example: "(optional)"
        '400':
          description: Invalid operation

components:
  schemas:
    EAccountType:
      type: string
      description: "Enumeration on types of possible accounts"
      enum:
        - SPOT
        - FUNDING
        - FUTURES
        - MARGIN
      example:
        MARGIN
    Account:
      type: object
      properties:
        id:
          type: string
          example: "23e4567-e89b-12d3-a456-426614174000"
          description: "UUID representation of an account identifier"
        type:
          $ref : '#/components/schemas/EAccountType'
  
    AccountBalance:
      type: object
      properties:
        coinSymbol:
          type: string
          example: USDT
          description: "The symbol of the cryptocurrency"
        totalAmount:
          type: string
          example: 195.172612
          description: "The total amount (as a string, for precision) in the account"
        pendingAmount:
          type: number
          example: 188.2315812
          description: "The pending amount in usage, on mempool but not passed confirmations"
        availableAmount:
          type: number
          example: 10.333
          description: "The available amount for usage, the amount the account has with guarantee"
        borrowedAmount:
          type: number
          example: 3.1
          description: "The borrowed amount for usage, the amount the exchange borrowed to the user"
    Balance:
      type: object
      properties:
        type:
          $ref : '#/components/schemas/EAccountType'
        balances:
          type: array
          items:
            $ref: '#/components/schemas/AccountBalance'

  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header