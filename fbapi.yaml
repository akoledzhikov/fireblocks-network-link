openapi: 3.0.0
info:
  description: |
    This is the [Fireblocks](https://fireblocks.com) Exchange API standard.
    Check out the [API documentation](https://docs.fireblocks.com) for more information.

    <h1>Authentication Fundamentals</h1>

    The API-KEY and SECRET are generated and provided by the exchange.
    
    <h2>Creating a Request</h2>

    All REST requests will contain the following headers:

    <p>*X-FBAPI-KEY* The API key as a string.</p>
    <p>*X-FBAPI-SIGNATURE* The encoded signature (see Signing a Message).</p>
    <p>*X-FBAPI-TIMESTAMP* A timestamp of the request (in milliseconds).</p>
    <p>*X-FBAPI-NONCE* An increasing number on the request.</p>

    <h2>Signing a Message</h2>

    <p><i>For the header of X-FBAPI-SIGNATURE:</i></p>

    <p>Create a prehash string {timestamp+nonce+method+endpoint+body} and apply an encoding onto the string (Pre-encoding is configurable: PLAIN, BASE64, HEXSTR, BASE58, BASE32).</p>
    <p>[The request body is a JSON string and need to be the same with the parameters passed by the API]</p>
    <p>Use SECRET to encrypt the string with HMAC (Internal hash function is configurable: SHA512, SHA3_256).</p>
    <p>After that, apply an additional encoding onto the result (Post-encoding is configurable: PLAIN, BASE64, HEXSTR, BASE58, BASE32).</p>

    <h2><i>Notice</i></h2>

    <p>The encrypted timestamp is consistent with the X-FBAPI-TIMESTAMP field in the request header.</p>
    <p>The body to be encrypted is consistent with the content of the Request Body.</p>
    <p>The Method is always UPPER CASE.</p>

    <p>Nonce in the request is strictly bigger than the last nonce sent.</p>

    <p>For GET requests, the endpoint contains the query string. e.g. /v1/depositAddress?coinSymbol=ETH&...</p>
    <p>The body is "" if there is no request body (for GET requests).</p>

    <h2>Selecting a Timestamp</h2>

    <p>The X-FBAPI-TIMESTAMP header is the number of milliseconds since Unix Epoch in UTC. e.g. 1547015186532</p>

    <p>The difference between the timestamp and the exchange service time must be less than 5 seconds.</p>
    <p>It's expected that the request on the exchange's end will be considered expired and rejected otherwise.</p>

    <h1>Error responses</h1>

    <p>Upon failures, the expected format of the error is as follows: </p>
    <pre id="json"><div class="redoc-json"><code><span class="ellipsis"></span><span class="token punctuation">{</span><ul style="list-style: none;"><li><div class="hoverable "><span class="property token string">"error"</span>: <span class="token string">"Missing request header params"</span><span class="token punctuation">,</span></div></li><li><div class="hoverable "><span class="property token string">"errorCode"</span>: <span class="token string">400000</span></div></li></ul><span class="token punctuation">}</span><span class="ellipsis"></span></code></div></pre>
    <p>"error" must be a string and is required.</p>
    <p>"errorCode" must either be a number or null.</p>
    <p>
    <h2>Predefined error codes on HTTP response 400:</h2>
    <table>
    <tr><p><td>Missing request header params</td><td>400000</td></p></tr>
    <tr><p><td>Nonce sent was invalid</td><td>400001</td></p></tr>
    <tr><p><td>Timestamp sent was invalid</td><td>400002</td></p></tr>
    <tr><p><td>Signature sent was invalid</td><td>400003</td></p></tr>
    <tr><p><td>Insufficient permissions for this API key</td><td>400004</td></p></tr>
    <tr><p><td>Insufficient funds to carry out this operation</td><td>400005</td></p></tr>
    <tr><p><td>Insufficient fee to carry out this operation</td><td>400006</td></p></tr>
    <tr><p><td>Unsupported account type for this exchange</td><td>400007</td></p></tr>
    <tr><p><td>Unsupported operation for this exchange</td><td>400008</td></p></tr>
    <tr><p><td>Asset not supported on this exchange</td><td>400009</td></p></tr>
    <tr><p><td>One of the parameters sent in the body or query is invalid</td><td>400010</td></p></tr>
    <tr><p><td>Bad address format sent</td><td>400011</td></p></tr>
    <tr><p><td>Balance amount is too small</td><td>400012</td></p></tr>
    <tr><p><td>This exchange needs manual deposit address generation</td><td>400013</td></p></tr>
    <tr><p><td>The exchange rejected this operation</td><td>400014</td></p></tr>
    <tr><p><td>Withdraw was cancelled or failed on the exchange</td><td>400015</td></p></tr>
    <tr><p><td>Address wasn't whitelisted</td><td>400016</td></p></tr>
    <tr><p><td>IP wasn't whitelisted</td><td>400017</td></p></tr>
    <tr><p><td>Account not found</td><td>400018</td></p></tr>
    </table>
    <p><p><i>Note</i> that not all error codes need to be in use!</p></p>

  title: Fireblocks Exchange API
  version: "0.5.1"
  contact:
    email: support@fireblocks.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'https://api.example.com/v1/'
x-readme:
  explorer-enabled: false
paths:  
  /v1/accounts:
    get:
      summary: Fetches list of all account types, and the balances within them.
      description: >
              In case the exchange supports an account type but the account doesn't
              contain any balance in that account type, it is expected the "balances"
              field to be an empty array.
      operationId: getBalances
      parameters:
        - name: X-FBAPI-KEY
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-KEY'
        - name: X-FBAPI-TIMESTAMP
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-TIMESTAMP'
        - name: X-FBAPI-SIGNATURE
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-SIGNATURE'
        - name: X-FBAPI-NONCE
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-NONCE'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Balance'
        '400':
          description: Return custom error and error code here.
        '401':
          description: Unauthorized. Either API details are missing or invalid
        '403':
          description: Forbidden- You do not have access to the requested resource.
        '415':
          description: Unsupported media type. You need to use application/json.
        '500':
          description: Exchange internal error.

  /v1/depositAddress:
    get:
      summary: Fetch the deposit wallet address for a coinSymbol and network
      description: > 
        Fireblocks will first check if a deposit wallet address exists using this endpoint.
        If one does not exist, then a new address will be created using the `POST /depositAddress` endpoint.
      operationId: fetchDepositAddress
      parameters:
        - name: X-FBAPI-KEY
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-KEY'
        - name: X-FBAPI-TIMESTAMP
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-TIMESTAMP'
        - name: X-FBAPI-SIGNATURE
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-SIGNATURE'
        - name: X-FBAPI-NONCE
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-NONCE'
        - name: accountType
          in: query
          required: true
          schema:
            $ref : '#/components/schemas/EAccountTypeSpot' 
        - name: coinSymbol
          in: query
          required: true
          example: "USDT"
          schema:
            type: string
        - name: network
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/ENetworkType'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                required: [depositAddress]
                properties:
                  depositAddress:
                    type: string
                    description: "The address of the deposit address. If not found, it will be empty."
                    example: "0xb794f5ea0ba39494ce839613fffba74279579268"
                  depositAddressTag:
                    type: string
                    description: "A destination tag/memo to include for supported coins (eg. XLM, XRP etc')"
                    example: "63163621"
                    nullable: true
        '400':
          description: Return custom error and error code here.
        '401':
          description: Unauthorized. Either API details are missing or invalid
        '403':
          description: Forbidden- You do not have access to the requested resource.
        '404':
          description: Account ID or Account Type not found or supported.
        '415':
          description: Unsupported media type. You need to use application/json.
        '500':
          description: Exchange internal error.
    post:
      summary: Create a new deposit wallet address for a given coinSymbol and network
      operationId: createDepositAddress
      parameters:
        - name: X-FBAPI-KEY
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-KEY'
        - name: X-FBAPI-TIMESTAMP
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-TIMESTAMP'
        - name: X-FBAPI-SIGNATURE
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-SIGNATURE'
        - name: X-FBAPI-NONCE
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-NONCE'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountType:
                  $ref : '#/components/schemas/EAccountTypeSpot' 
                coinSymbol:
                  example: "USDT"
                  type: string
                network:
                  example: "ETH"
                  $ref: '#/components/schemas/ENetworkType'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                required: [depositAddress]
                properties:
                  depositAddress:
                    type: string
                    description: "The address of the deposit address. If not found, it will be empty."
                    example: "0xb794f5ea0ba39494ce839613fffba74279579268"
                  depositAddressTag:
                    type: string
                    description: "A destination tag/memo to include for supported coins (eg. XLM, XRP etc')"
                    example: "63163621"
                    nullable: true
        '400':
          description: Return custom error and error code here.
        '401':
          description: Unauthorized. Either API details are missing or invalid
        '403':
          description: Forbidden- You do not have access to the requested resource.
        '404':
          description: Account ID or Account Type not found or supported.
        '415':
          description: Unsupported media type. You need to use application/json.
        '500':
          description: Exchange internal error.

  /v1/withdrawalFee:
    get:
      summary: Fetch the estimated transaction fee required for an external withdrawal
      operationId: fetchWithdrawalFee
      parameters:
        - name: X-FBAPI-KEY
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-KEY'
        - name: X-FBAPI-TIMESTAMP
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-TIMESTAMP'
        - name: X-FBAPI-SIGNATURE
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-SIGNATURE'
        - name: X-FBAPI-NONCE
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-NONCE'
        - name: transferAmount
          in: query
          required: true
          schema:
            type: string
        - name: coinSymbol
          in: query
          required: true
          schema:
            type: string
        - name: network
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/ENetworkType'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                required: [feeAmount]
                properties:
                  feeAmount:
                    type: string
                    example: "0.23823"
        '400':
          description: Return custom error and error code here.
        '401':
          description: Unauthorized. Either API details are missing or invalid
        '403':
          description: Forbidden- You do not have access to the requested resource.
        '415':
          description: Unsupported media type. You need to use application/json.
        '500':
          description: Exchange internal error.

  /v1/withdraw:
    post:
      summary: Initiate a withdrawal from Exchange wallet to external wallet address
      operationId: postWithdraw
      parameters:
        - name: X-FBAPI-KEY
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-KEY'
        - name: X-FBAPI-TIMESTAMP
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-TIMESTAMP'
        - name: X-FBAPI-SIGNATURE
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-SIGNATURE'
        - name: X-FBAPI-NONCE
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-NONCE'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountType:
                  $ref : '#/components/schemas/EAccountTypeSpot'
                toAddress:
                  example: "bc1qs95ej87htkfy5786anzwh8sz3gmzvqh2d2uey2"
                  type: string
                tag:
                  description: "A 'tag' or 'memo', if required by the network"
                  type: string
                  nullable: true
                  example: null
                coinSymbol:
                  example: "ETH"
                  type: string
                network:
                  example: "ETH"
                  $ref: '#/components/schemas/ENetworkType'
                amount:
                  example: "0.0010597"
                  type: string
                isGross:
                  example: true
                  type: boolean
                maxFee:
                  example: "0.00001616"
                  description: The service fee charged for withdrawal
                  type: string
                  nullable: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                required: [transactionID]
                properties:
                  transactionID:
                    type: string
                    example: "3e8374383acce78d38be7fe9"
        '400':
          description: Return custom error and error code here.
        '401':
          description: Unauthorized. Either API details are missing or invalid
        '403':
          description: Forbidden- You do not have access to the requested resource.
        '404':
          description: Account ID or Account Type not found or supported.
        '415':
          description: Unsupported media type. You need to use application/json.
        '429':
          description: Rate limit reached
        '500':
          description: Exchange internal error.

  /v1/transactionByID:
    get:
      summary: Fetch the status of a given transaction ID
      operationId: getWithdraw
      parameters:
        - name: X-FBAPI-KEY
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-KEY'
        - name: X-FBAPI-TIMESTAMP
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-TIMESTAMP'
        - name: X-FBAPI-SIGNATURE
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-SIGNATURE'
        - name: X-FBAPI-NONCE
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-NONCE'
        - name: transactionID
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >
            Successful operation.
            If status is NOT_FOUND, all other fields are optional.
            In the other cases, all fields are required.
          content:
            application/json:
              schema:
                type: object
                required: [status]
                properties:
                  transactionID:
                    type: string
                    example: "46bas218d9h21uhib4i1u2h"
                  status:
                    $ref: '#/components/schemas/Status'
                  txHash:
                    type: string
                    example: "44e25bc0ed840f9bf0e58d6227db15192d5b89e79ba4304da16b09703f68ceaf"
                  amount:
                    type: string
                    description: "The net amount of the transaction"
                    example: "1.1"
                  serviceFee:
                    type: string
                    example: "0.000000031"
                  coinSymbol:
                    type: string
                    example: "ETH"
                  network:
                    $ref: '#/components/schemas/ENetworkType'
                  direction:
                    $ref: '#/components/schemas/ETransferDirectionTypeWithdraw'
                  timestamp:
                    type: number
                    format: UNIX-timestamp-epoch
                    description: "Milliseconds"
                    example: 1546658861000
        '400':
          description: Return custom error and error code here.
        '401':
          description: Unauthorized. Either API details are missing or invalid
        '403':
          description: Forbidden- You do not have access to the requested resource.
        '415':
          description: Unsupported media type. You need to use application/json.
        '500':
          description: Exchange internal error.

  /v1/transactionByHash:
    get:
      summary: Fetch the status of a given <txHash, network> pair
      operationId: getDeposit
      parameters:
        - name: X-FBAPI-KEY
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-KEY'
        - name: X-FBAPI-TIMESTAMP
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-TIMESTAMP'
        - name: X-FBAPI-SIGNATURE
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-SIGNATURE'
        - name: X-FBAPI-NONCE
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-NONCE'
        - name: txHash
          in: query
          required: true
          schema:
            type: string
        - name: network
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/ENetworkType'
      responses:
        '200':
          description: >
            Successful operation.
            If status is NOT_FOUND, all other fields are optional.
            In the other cases, all fields are required.
          content:
            application/json:
              schema:
                type: object
                required: [status]
                properties:
                  transactionID:
                    type: string
                    example: "46bas218d9h21uhib4i1u2h"
                  status:
                    $ref: '#/components/schemas/Status'
                  txHash:
                    type: string
                    example: "44e25bc0ed840f9bf0e58d6227db15192d5b89e79ba4304da16b09703f68ceaf"
                  amount:
                    type: string
                    description: "The net amount of the transaction"
                    example: "1.1"
                  serviceFee:
                    type: string
                    example: "0.000000031"
                  coinSymbol:
                    type: string
                    example: "ETH"
                  network:
                    $ref: '#/components/schemas/ENetworkType'
                  direction:
                    $ref: '#/components/schemas/ETransferDirectionTypeDeposit'
                  timestamp:
                    type: number
                    format: UNIX-timestamp-epoch
                    description: "Milliseconds"
                    example: 1546658861000
        '400':
          description: Return custom error and error code here.
        '401':
          description: Unauthorized. Either API details are missing or invalid
        '403':
          description: Forbidden- You do not have access to the requested resource.
        '415':
          description: Unsupported media type. You need to use application/json.
        '500':
          description: Exchange internal error.

  /v1/transactionHistory:
    get:
      summary: Fetch the history of all transactions
      operationId: transactionHistory
      parameters:
        - name: X-FBAPI-KEY
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-KEY'
        - name: X-FBAPI-TIMESTAMP
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-TIMESTAMP'
        - name: X-FBAPI-SIGNATURE
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-SIGNATURE'
        - name: X-FBAPI-NONCE
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-NONCE'
        - name: fromDate
          in: query
          required: true
          schema:
            type: string
            format: UNIX-timestamp-epoch
            description: "Milliseconds"
            example: "1546658861000"
        - name: toDate
          in: query
          required: true
          schema:
            type: string
            format: UNIX-timestamp-epoch
            description: "Milliseconds"
            example: "1546658865000"
        - name: pageSize
          in: query
          description: "Number of entries per page size in response"
          required: true
          schema:
            type: number
            minimum: 1
            example: 500
        - name: pageCursor
          in: query
          required: false
          description: "If not specified, return the first page. Otherwise, return the page the cursor points to."
          schema:
            type: string
            nullable: true
            example: null
        - name: isSubTransfer
          in: query
          required: true
          description: "If this is a sub-account tranfer"
          schema:
            type: boolean
            example: false
        - name: coinSymbol
          in: query
          required: true
          example: "USDT"
          schema:
            type: string
        - name: network
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/ENetworkType'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                required: [transactions]
                properties:
                  nextPageCursor:
                      type: string
                      nullable: true
                      example: null
                      description: "If not present, refers to the last possible page. Otherwise refers to the next page."
                  transactions:
                    type: array
                    items:
                      type: object
                      required: [status]
                      properties:
                        transactionID:
                          type: string
                          example: "46bas218d9h21uhib4i1u2h"
                        status:
                          $ref: '#/components/schemas/Status'
                        txHash:
                          type: string
                          example: "44e25bc0ed840f9bf0e58d6227db15192d5b89e79ba4304da16b09703f68ceaf"
                        amount:
                          type: string
                          description: "The net amount of the transaction"
                          example: "1.1"
                        serviceFee:
                          type: string
                          example: "0.000000031"
                        coinSymbol:
                          type: string
                          example: "ETH"
                        network:
                          $ref: '#/components/schemas/ENetworkType'
                        direction:
                          $ref: '#/components/schemas/ETransferDirectionTypeDeposit'
                        timestamp:
                          type: number
                          format: UNIX-timestamp-epoch
                          description: "In Milliseconds. The timestamp on the creation of the transaction."
                          example: 1546658861000
        '400':
          description: Return custom error and error code here.
        '401':
          description: Unauthorized. Either API details are missing or invalid
        '403':
          description: Forbidden- You do not have access to the requested resource.
        '415':
          description: Unsupported media type. You need to use application/json.
        '500':
          description: Exchange internal error.

  /v1/supportedAssets:
    get:
      summary: Fetch the assets supported by the exchanges
      operationId: supportedAssets
      parameters:
        - name: X-FBAPI-KEY
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-KEY'
        - name: X-FBAPI-TIMESTAMP
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-TIMESTAMP'
        - name: X-FBAPI-SIGNATURE
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-SIGNATURE'
        - name: X-FBAPI-NONCE
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-NONCE'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required: [coinSymbol, network, coinClass]
                  properties:
                    coinSymbol:
                      type: string
                      example: "USDT"
                    network:
                      $ref: '#/components/schemas/ENetworkType'
                    coinClass:
                      $ref: '#/components/schemas/ECoinClass'
                    identifiers:
                      type: array
                      items:
                        type: string
                        nullable: true
                        description: >
                          The identifier(s) for asset types that are created by a smart contract (ERC20, BEP20, etc'), could be a contractAddress for example
                          Some tokens require multiple identifiers (for example, XLM).
                          The order of the identifiers is via heirarchy (for example, XLM has on it's first identifier the contractAddress and the second the contractAddressSpecifier)
                        example: "0xdAC17F958D2ee523a2206206994597C13D831ec7"
        '400':
          description: Return custom error and error code here.
        '401':
          description: Unauthorized. Either API details are missing or invalid
        '403':
          description: Forbidden- You do not have access to the requested resource.
        '415':
          description: Unsupported media type. You need to use application/json.
        '500':
          description: Exchange internal error.

  /v1/subMainTransfer:
    post:
      summary: Initiate a transfer between an internal sub-account and the main-account
      operationId: subMainTransfer
      parameters:
        - name: X-FBAPI-KEY
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-KEY'
        - name: X-FBAPI-TIMESTAMP
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-TIMESTAMP'
        - name: X-FBAPI-SIGNATURE
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-SIGNATURE'
        - name: X-FBAPI-NONCE
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-NONCE'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subAccountID:
                  example: "1164fbab-1968-441d-848c-4cbe5ced4328"
                  type: string
                direction:
                  example: "IN"
                  $ref: '#/components/schemas/ESubTransferDirectionType'
                coinSymbol:
                  example: "USDT"
                  type: string
                amount:
                  example: "7.3"
                  type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  completed:
                    type: boolean
                    example: true
                  transactionID:
                    type: string
                    nullable: true
                    example: "3e8374383acce78d38be7fe9"
        '400':
          description: Return custom error and error code here.
        '401':
          description: Unauthorized. Either API details are missing or invalid
        '403':
          description: Forbidden- You do not have access to the requested resource.
        '404':
          description: Account ID or Account Type not found or supported.
        '415':
          description: Unsupported media type. You need to use application/json.
        '429':
          description: Rate limit reached
        '500':
          description: Exchange internal error.
 
  /v1/subaccountsTransfer:
    post:
      summary: Initiate a transfer between an two sub-accounts
      operationId: subaccountsTransfer
      parameters:
        - name: X-FBAPI-KEY
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-KEY'
        - name: X-FBAPI-TIMESTAMP
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-TIMESTAMP'
        - name: X-FBAPI-SIGNATURE
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-SIGNATURE'
        - name: X-FBAPI-NONCE
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-NONCE'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                srcSubAccountID:
                  example: "81690809-5eb9-48be-8eb5-6af17131d7dc"
                  type: string
                dstSubAccountID:
                  example: "d6eba9e6-b867-4f9b-9353-ceb7a2db9311"
                  type: string
                coinSymbol:
                  example: "BTC"
                  type: string
                amount:
                  example: "0.03"
                  type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  completed:
                    type: boolean
                    example: true
                  transactionID:
                    type: string
                    nullable: true
                    example: "3e8374383acce78d38be7fe9"
        '400':
          description: Return custom error and error code here.
        '401':
          description: Unauthorized. Either API details are missing or invalid
        '403':
          description: Forbidden- You do not have access to the requested resource.
        '404':
          description: Account ID or Account Type not found or supported.
        '415':
          description: Unsupported media type. You need to use application/json.
        '429':
          description: Rate limit reached
        '500':
          description: Exchange internal error.

  /v1/internalTransfer:
    post:
      summary: Initiate a transfer from one internal account to another, eg. TRADING to MARGIN
      operationId: internalTransfer
      parameters:
        - name: X-FBAPI-KEY
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-KEY'
        - name: X-FBAPI-TIMESTAMP
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-TIMESTAMP'
        - name: X-FBAPI-SIGNATURE
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-SIGNATURE'
        - name: X-FBAPI-NONCE
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-FBAPI-NONCE'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fromAccountType:
                  description: "The sub-account type being transferred from."
                  example: "MARGIN"
                  $ref : '#/components/schemas/EAccountType'
                toAccountType:
                  description: "The sub-account type being transferred to."
                  $ref : '#/components/schemas/EAccountTypeSpot'
                coinSymbol:
                  example: "USDT"
                  type: string
                amount:
                  example: "1.4"
                  type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                required: [completed]
                properties:
                  completed:
                    type: boolean
                    example: true
                  transactionID:
                    type: string
                    nullable: true
                    example: "3e8374383acce78d38be7fe9"
        '400':
          description: Return custom error and error code here.
        '401':
          description: Unauthorized. Either API details are missing or invalid
        '403':
          description: Forbidden- You do not have access to the requested resource.
        '404':
          description: Account ID or Account Type not found or supported.
        '415':
          description: Unsupported media type. You need to use application/json.
        '429':
          description: Rate limit reached
        '500':
          description: Exchange internal error.

components:
  schemas:
    X-FBAPI-KEY:
      type: string
      description: >
        All requests must include the X-FBAPI-KEY header containing your API key.
    X-FBAPI-TIMESTAMP:
      type: number
      format: UNIX-timestamp-epoch
      description: >
        All requests must include the X-FBAPI-TIMESTAMP header containing the timestamp (in milliseconds).
      example:
        1546658861000
    X-FBAPI-NONCE:
      type: number
      format: number
      description: >
        All requests must include the X-FBAPI-NONCE header being an increasing number. Usually equals the timestamp.
      example:
        1546658861000
    X-FBAPI-SIGNATURE:
      type: string
      description: >
        All requests must include the X-FBAPI-SIGNATURE header containing the signature of the request.
    EAccountType:
      type: string
      description: "Enumeration on types of possible accounts"
      enum:
        - EXCHANGE
        - SPOT
        - FUNDING
        - MARGIN
        - FUTURES
        - OPTIONS
      example:
        MARGIN
    EAccountTypeSpot:
      type: string
      description: "Enumeration on types of possible accounts"
      enum:
        - EXCHANGE
        - SPOT
        - FUNDING
        - MARGIN
        - FUTURES
        - OPTIONS
      example:
        SPOT
    ENetworkType:
      type: string
      description: "Enumeration on types of possible networks"
      enum:
        - BNB_BSC
        - BSV
        - XDC
        - SGB
        - KSM
        - RBTC
        - AVAX
        - DOT
        - XRP
        - ETH
        - ETH-AETH
        - BCH
        - ADA
        - ECS
        - XEC
        - FTM_FANTOM
        - EOS
        - BCHA
        - HBAR
        - XTZ
        - ALGO
        - WND
        - BTC
        - ZEC
        - DASH
        - TRX
        - LTC
        - LUNC
        - MATIC_POLYGON
        - XEM
        - DOGE
        - XLM
        - SOL
        - CELO
        - ETC
      example:
        ETH
    ECoinClass:
      type: string
      description: >
        Coin classes:

          * `BASE` - A base blockchain asset
          * `TOKEN` - An asset over a blockchain (for example, ERC20)
      enum:
        - BASE
        - TOKEN
      example:
        TOKEN
    ESubTransferDirectionType:
      type: string
      description: >
        Direction of a sub transfer:

          * `IN` - From sub account to the main account
          * `OUT` - From the main account to a sub account
      enum:
        - IN
        - OUT
      example:
        IN
    ETransferDirectionTypeDeposit:
      type: string
      description: >
        Direction of a transfer:

          * `CRYPTO_DEPOSIT` - A crypto deposit operation
          * `CRYPTO_WITHDRAWAL` - A crypto withdrawal operation
      enum:
        - CRYPTO_DEPOSIT
        - CRYPTO_WITHDRAWAL
      example:
        CRYPTO_DEPOSIT
    ETransferDirectionTypeWithdraw:
      type: string
      description: >
        Direction of a transfer:

          * `CRYPTO_DEPOSIT` - A crypto deposit operation
          * `CRYPTO_WITHDRAWAL` - A crypto withdrawal operation
      enum:
        - CRYPTO_DEPOSIT
        - CRYPTO_WITHDRAWAL
      example:
        CRYPTO_WITHDRAWAL
    AccountBalance:
      type: object
      properties:
        coinSymbol:
          type: string
          example: USDT
          description: "The symbol of the cryptocurrency"
        totalAmount:
          type: string
          example: "195.172612"
          description: "The total amount (as a string, for precision) in the account"
        pendingAmount:
          type: string
          example: "188.2315812"
          description: "The pending amount in usage, on mempool but not passed confirmations"
        availableAmount:
          type: string
          example: "10.333"
          description: "The available amount for usage, the amount the account has with guarantee"
        borrowedAmount:
          type: string
          example: "3.1"
          description: "The borrowed amount for usage, the amount the exchange borrowed to the user"
    Balance:
      type: object
      properties:
        displayName:
          type: string
          example: "Margin (Cross)"
          description: "Text to describe the account type"
          nullable: true
        type:
          required: true
          $ref : '#/components/schemas/EAccountType'
        balances:
          type: array
          items:
            required: true
            $ref: '#/components/schemas/AccountBalance'
    Status:
      type: string
      description: >
        Types of possible statuses for transactions:

          * `NOT_FOUND` - The transaction doesn't exist. If returned in `GET /transactionByHash` or `GET /transactionByID`, all other params are optional.
          * `PROCESSING` - The exchange is processing the transaction.
          * `CANCELLED` - The transaction was terminated by the account owner or the exchange.
          * `FAILED` - The transaction failed due to some error in the transaction.
          * `PENDING_MANUAL_APPROVAL` - The transaction requires some manual approval by the account owner.
          * `PENDING_SERVICE_MANUAL_APPROVAL` - The transaction is being reviewed manually by the exchange and hasn't been accepted yet.
          * `REJECTED` - The exchange rejected the transaction.
          * `COMPLETED` - The transaction is successfully on the blockchain (and passed enough confirmations).
      enum:
        - NOT_FOUND
        - PROCESSING
        - CANCELLED
        - FAILED
        - PENDING_MANUAL_APPROVAL
        - PENDING_SERVICE_MANUAL_APPROVAL
        - REJECTED
        - COMPLETED
      example: "COMPLETED"
